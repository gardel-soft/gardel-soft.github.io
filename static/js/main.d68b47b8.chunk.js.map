{"version":3,"sources":["components/sidebar/mainitem/subitem/SideBarSubItem.tsx","components/sidebar/mainitem/SideBarMainItem.tsx","components/common/Table/Table.tsx","components/common/PageTitle/PageTitle.tsx","components/common/PageContainer/PageContainer.tsx","connectors/ProductsConnector.tsx","state/ProductsState.tsx","components/products/Products.tsx","components/common/TextField/TextField.tsx","components/common/NumericField/NumericField.tsx","components/products/CreateProduct/CreateProduct.tsx","state/StockState.tsx","connectors/StocksConnector.tsx","components/stocks/Stock.tsx","components/stocks/modifystock/StockComponent.tsx","utils/StockTransformer.tsx","components/stocks/modifystock/stocktitle/StockTitleComponent.tsx","components/stocks/modifystock/stockselectproduct/StockSelectProductComponent.tsx","components/stocks/modifystock/ModifyStock.tsx","components/stocks/addstock/AddStock.tsx","components/stocks/deletestock/DeleteStock.tsx","state/AppState.tsx","components/sidebar/SideBar.tsx","components/sidebar/mainnav/SideItemHeader.tsx","components/header/Header.tsx","components/login/Login.tsx","App.js","index.js","utils/constants.js","connectors/GenericConnector.tsx"],"names":["SideBarSubItem","observer","props","isSubItemSelected","navItem","id","clickedIds","childId","parentId","className","onClick","newIds","setClicked","itemName","SideBarMainItem","isMainItemSelected","icon","faChevronUp","faChevronDown","subItems","map","item","idx","Table","columns","rows","column","index","scope","renderHeader","row","renderBody","PageTitle","title","subtitle","attrs","classes","classNames","PageContainer","sm","children","require","doGet","doPost","emptyName","value","isValid","emptyDescription","emptyUnit","emptyMinimumStock","emptyInitialStock","emptyPrice","emptyDiscount","currentProducts","productsIds","setCurrentProducts","data","newProducts","filter","product","includes","getProductById","productId","makeObservable","this","observable","action","Products","useEffect","getProductListWrapper","a","AppState","accountId","productState","code","name","unit","measure","price","discount","description","TextField","onChange","placeholder","lgSize","handleChange","lg","event","target","invalid","NumericField","intValue","parseInt","Number","isNaN","checkIfValid","type","CreateProduct","options","useState","setName","length","setCode","setUnit","setMeasure","minimumStock","setMinimumStock","initialStock","setInitialStock","setPrice","setDiscount","setDescription","processingRequest","setProcessingRequest","notify","message","success","toast","error","handleCreateProduct","minimum_stock","current_stock","setTimeout","TOAST_DURATION","option","renderOptions","disabled","theme","defaultStockOrder","quantity","currentStock","setCurrentStock","Stock","getStockListWrapper","stockState","stock","StockComponent","selectedOrder","allOrders","orderIndex","setSelectedOrders","handleDeletion","setIsValid","orders","console","log","newQuantity","newOrders","newPrice","newDiscount","small","faTrashAlt","buildStock","mapToOrder","order","StockTitleComponent","StockSelectProductComponent","addNewMovement","addManyMovements","stockIndex","setStockIndex","singleSelect","setSingleSelect","hiddenFileInput","useRef","StockState","faCheck","ref","e","current","click","toggle","checked","moment","ModifyStock","movementType","btnType","btnName","movement","setMovement","handleAddStock","result","date","now","handleDeleteOrder","newMovement","splice","readXlsxFile","files","then","forEach","ProductsState","toString","push","mov","reduce","previousValue","AddStock","DeleteStock","Object","freeze","componentToRender","localStorage","getItem","setAccountId","SideBar","updateSelectedItemId","selectedItemIds","SideItemHeader","Header","Login","style","height","backgroundColor","margin","width","onLoginSuccessful","config","App","setSelectedItemIds","size","md","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","setItem","ReactDOM","render","StrictMode","document","getElementById","module","exports","BACKEND_URL","axios","path","get","response","request","status","post"],"mappings":"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","file":"static/js/main.d68b47b8.chunk.js","sourcesContent":["import {NavItem} from \"shards-react\";\nimport {observer} from \"mobx-react\";\nimport React from \"react\";\nimport \"./SideBarSubItem.css\";\n\n\nconst SideBarSubItem = observer((props) => {\n  const isSubItemSelected = () => {\n    return (\n      props.navItem.id === props.clickedIds.childId &&\n      props.parentId === props.clickedIds.parentId\n    );\n  };\n\n  const getFontStyleIfClicked = () => {\n    return isSubItemSelected()\n      ? \"selected-sub-item-style\"\n      : \"not-selected-sub-item-style\";\n  };\n\n  const getBackgroundColorIfClicked = () => {\n    return isSubItemSelected()\n      ? \"primary-background-detail-color\"\n      : \"secondary-light-palette-background-color\";\n  };\n\n  const updateIfItIsNotChild = () => {\n    const newIds = {\n      parentId: props.clickedIds.parentId,\n      childId: props.navItem.id,\n    };\n    props.setClicked(newIds);\n  };\n\n  return (\n    <NavItem className={\"pl-5 nav-item \" + getBackgroundColorIfClicked()} >\n      <div\n        className={\"primary-white-color \" + getFontStyleIfClicked()}\n        onClick={updateIfItIsNotChild}\n      >\n        {props.navItem.itemName}\n      </div>\n    </NavItem>\n  );\n});\nexport default SideBarSubItem;\n","import {NavItem} from \"shards-react\";\nimport {observer} from \"mobx-react\";\nimport React from \"react\";\nimport \"./SideBarMainItem.css\";\nimport SideBarSubItem from \"./subitem/SideBarSubItem\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronDown, faChevronUp} from \"@fortawesome/free-solid-svg-icons\";\n\nconst SideBarMainItem = observer((props) => {\n  const isMainItemSelected = () => {\n    return props.navItem.id === props.clickedIds.parentId;\n  };\n\n  const getMainItemFontStyleIfSelected = () => {\n    if (isMainItemSelected()) {\n      return \"selected-item-style\";\n    }\n    return \"not-selected-item-style\";\n  };\n\n  const getIconIfIsClicked = () => {\n    if (isMainItemSelected()) {\n      return faChevronUp;\n    }\n    return faChevronDown;\n  };\n\n  const updateIfItIsNotChild = () => {\n    if (!isMainItemSelected()) {\n      props.setClicked({parentId: props.navItem.id, childId: 0});\n    }\n  };\n\n  return (\n    <div className=\"border-bottom\">\n      <NavItem className={\"nav-item primary-white-color \" + getMainItemFontStyleIfSelected()}>\n        <div className=\"pl-2 d-flex justify-space-between align-items-center\"\n          onClick={updateIfItIsNotChild} >\n          {props.navItem.itemName}\n          <FontAwesomeIcon icon={getIconIfIsClicked()}/>\n        </div>\n      </NavItem>\n      {isMainItemSelected()\n        ? props.navItem.subItems.map((item, idx) => (\n          <SideBarSubItem\n            key={idx}\n            navItem={item}\n            parentId={props.navItem.id}\n            clickedIds={props.clickedIds}\n            setClicked={props.setClicked}\n          />\n        ))\n        : null}\n    </div>\n  );\n});\nexport default SideBarMainItem;\n","import React from \"react\";\nimport {Card, CardBody} from \"shards-react\";\nimport {observer} from \"mobx-react\";\n\nconst Table = observer(({columns, rows}) => {\n  const renderHeader = (columns: string[]) => {\n    return (\n      <thead className=\"bg-light\">\n        <tr>\n          {columns.map((column, index) => (\n            <th key={index} scope=\"col\" className=\"border-0\">\n              {column}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  };\n\n  const renderBody = (rows: string[][]) => {\n    return (\n      <tbody>\n        {rows.map((row, index) => (\n          <tr key={index}>\n            {row.map((item, index) => (\n              <td key={index}>{item}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  };\n\n  return (\n    <Card>\n      <CardBody className=\"p-0\">\n        <table className=\"table mb-0\">\n          {renderHeader(columns)}\n          {renderBody(rows)}\n        </table>\n      </CardBody>\n    </Card>\n  );\n});\n\nexport default Table;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport {Col} from \"shards-react\";\n\nconst PageTitle = ({title, subtitle = null, className, ...attrs}) => {\n  const classes = classNames(\n    className,\n    \"pl-0\",\n    \"pt-2\",\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-3\",\n    \"d-flex\",\n    \"flex-direction-row\",\n  );\n\n  return (\n    <div className={classes} {...attrs}>\n      <h5 className=\"page-title mb-0\">{title}</h5>\n      { subtitle &&\n        <span className=\"text-uppercase page-subtitle ml-2 d-flex align-self-end\">{subtitle}</span>\n      }\n    </div>\n  );\n};\n\nexport default PageTitle;\n","import \"./PageContainer.css\";\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\nimport {observer} from \"mobx-react\";\n\nconst PageContainer = observer((props) => {\n  return (\n    <div className=\"d-flex flex-direction-column w-100\">\n      <PageTitle\n        sm=\"4\"\n        title={props.title}\n        subtitle={props.subtitle}\n        className=\"text-sm-left\"\n      />\n      {props.children}\n    </div>\n  );\n});\n\nexport default PageContainer;\n","const {doGet, doPost} = require(\"./GenericConnector\");\nimport {RequestProduct} from \"../components/products/ProductsTypes\";\nimport AppState from \"../state/AppState\";\n\nexport const getProductList = () => {\n  return doGet(`api/v1/users/${AppState.accountId}/products`);\n};\n\nexport const addProduct = (data: RequestProduct) => {\n  return doPost(`api/v1/users/${AppState.accountId}/products`, data);\n};\n","// @ts-ignore\nimport {action, makeObservable, observable} from \"mobx\";\nimport {ResponseProduct} from \"../components/products/ProductsTypes\";\n\nclass ProductsState {\n  constructor() {\n    makeObservable(this, {\n      emptyName: observable,\n      emptyDescription: observable,\n      emptyUnit: observable,\n      emptyMinimumStock: observable,\n      emptyInitialStock: observable,\n      emptyPrice: observable,\n      emptyDiscount: observable,\n      currentProducts: observable,\n      setCurrentProducts: action,\n      getProductById: action,\n    });\n  }\n  /* initial states */\n  emptyName = {value: \"\", isValid: false};\n  emptyDescription = {value: \"\", isValid: true};\n  emptyUnit = {value: 0, isValid: false};\n  emptyMinimumStock = {value: 0, isValid: false};\n  emptyInitialStock = {value: 0, isValid: false};\n  emptyPrice = {value: 0, isValid: false};\n  emptyDiscount = {value: 0, isValid: true};\n  /* dinamic states */\n  currentProducts: ResponseProduct[] = [];\n  productsIds: string[] = [];\n  setCurrentProducts = (data) => {\n    const newProducts = data.filter(\n      (product) => !this.productsIds.includes(product.id),\n    );\n    this.currentProducts = [...this.currentProducts, ...newProducts];\n    this.productsIds = [\n      ...this.productsIds,\n      ...newProducts.map((product) => product.id),\n    ];\n  };\n  getProductById = (productId) => {\n    const products = this.currentProducts.filter(\n      (product) => product.id === productId,\n    );\n    return products[0];\n  };\n}\n\nexport default new ProductsState();\n","import React, {useEffect} from \"react\";\nimport {observer} from \"mobx-react\";\nimport Table from \"../common/Table/Table\";\nimport PageContainer from \"../common/PageContainer/PageContainer\";\nimport {getProductList} from \"../../connectors/ProductsConnector\";\nimport productState from \"../../state/ProductsState\";\n\nconst Products = observer((props) => {\n  useEffect(() => {\n    const getProductListWrapper = async () => {\n      const data = await getProductList();\n      productState.setCurrentProducts(data);\n    };\n    getProductListWrapper();\n  }, []);\n\n  const formatProducts = () => {\n    return productState.currentProducts.map((product) => [\n      product.code,\n      product.name,\n      `${product.unit} ${product.measure}`,\n      product.price,\n      product.discount,\n      product.description,\n    ]);\n  };\n\n  return (\n    <PageContainer title=\"Producto\">\n      <Table\n        columns={[\n          \"Código\",\n          \"Nombre\",\n          \"Medida\",\n          \"Precio\",\n          \"Descuento %\",\n          \"Descripción\",\n        ]}\n        rows={formatProducts()}\n      />\n    </PageContainer>\n  );\n});\n\nexport default Products;\n","import React from \"react\";\nimport {FormInput, Col} from \"shards-react\";\n\nconst TextField = ({title, value, onChange, placeholder = \"\", isValid = true, lgSize = \"3\"}) => {\n  const handleChange = (value: string) => {\n    const isValid = value && value !== \"\";\n    onChange({value: isValid ? value : \"\", isValid});\n  };\n\n  return (\n    <Col lg={lgSize}>\n      {title && <label>{title}</label>}\n      <FormInput\n        placeholder={placeholder}\n        value={value}\n        onChange={(event) => {\n          handleChange(event.target.value);\n        }}\n        invalid={!isValid}\n      />\n    </Col>\n  );\n};\n\nexport default TextField;\n","import React from \"react\";\nimport {FormInput, Col} from \"shards-react\";\n\nconst NumericField = ({\n  value,\n  onChange,\n  placeholder = \"\",\n  isValid = true,\n  classes = \"\",\n  lgSize = \"3\",\n  ...props\n}) => {\n  const checkIfValid = (value) => {\n    return (!Number.isNaN(value) && value >= 0);\n  };\n\n  const handleChange = (value: string) => {\n    const intValue = parseInt(value);\n    const isValid = checkIfValid(intValue);\n    onChange({value: isValid ? intValue : 0, isValid});\n  };\n\n  return (\n    <Col className={classes} lg={lgSize}>\n      {props.title && <label>{props.title}</label>}\n      <FormInput\n        placeholder={placeholder}\n        value={value}\n        type=\"number\"\n        onChange={(event) => {\n          handleChange(event.target.value);\n        }}\n        invalid={!isValid}\n      />\n    </Col>\n  );\n};\n\nexport default NumericField;\n","import React, {useEffect, useState} from \"react\";\nimport {\n  FormSelect,\n  FormTextarea,\n  Button,\n  Row,\n  Col,\n  Card,\n  CardBody,\n} from \"shards-react\";\nimport {observer} from \"mobx-react\";\nimport {addProduct} from \"../../../connectors/ProductsConnector\";\nimport {RequestProduct} from \"../ProductsTypes\";\nimport \"./CreateProduct.css\";\nimport TextField from \"../../common/TextField/TextField\";\nimport NumericField from \"../../common/NumericField/NumericField\";\nimport PageContainer from \"../../common/PageContainer/PageContainer\";\nimport productState from \"../../../state/ProductsState\";\nimport {TOAST_DURATION} from \"../../../utils/constants\";\nimport {toast} from \"react-toastify\";\n\nconst CreateProduct = observer((props) => {\n  const options = [\n    \"Unidad (u)\",\n    \"Kilogramos (kg)\",\n    \"Gramos (gr)\",\n    \"Litro (L)\",\n    \"Mililitro (mL)\",\n  ];\n\n  const [name, setName] = useState(productState.emptyName);\n  const [code, setCode] = useState({\n    value: productState.currentProducts.length,\n    isValid: false,\n  });\n  const [unit, setUnit] = useState(productState.emptyUnit);\n  const [measure, setMeasure] = useState({value: options[0], isValid: true});\n  const [minimumStock, setMinimumStock] = useState(\n    productState.emptyMinimumStock,\n  );\n  const [initialStock, setInitialStock] = useState(\n    productState.emptyInitialStock,\n  );\n  const [price, setPrice] = useState(productState.emptyPrice);\n  const [discount, setDiscount] = useState(productState.emptyDiscount);\n  const [description, setDescription] = useState(productState.emptyDescription);\n  const [processingRequest, setProcessingRequest] = useState(false);\n  // const [isAfterFirstClick, setIsAfterFirstClick] = useState(true);\n\n  const notify = (message, success = true) => {\n    if (success) {\n      toast.success(message);\n      setProcessingRequest(success);\n    } else {\n      toast.error(message);\n    }\n  };\n\n  const cleanData = () => {\n    setTimeout(() => {\n      setProcessingRequest(false);\n      setName(productState.emptyName);\n      setCode({value: code.value + 1, isValid: true});\n      setUnit(productState.emptyUnit);\n      setMinimumStock(productState.emptyMinimumStock);\n      setInitialStock(productState.emptyMinimumStock);\n      setPrice(productState.emptyPrice);\n      setDiscount(productState.emptyDiscount);\n      setDescription(productState.emptyDescription);\n      // setIsAfterFirstClick(true);\n    }, TOAST_DURATION);\n  };\n\n  const handleCreateProduct = async () => {\n    try {\n      // setIsAfterFirstClick(false);\n      const product: RequestProduct = {\n        name: name.value,\n        code: code.value,\n        unit: unit.value,\n        measure: measure.value,\n        minimum_stock: minimumStock.value,\n        current_stock: initialStock.value,\n        price: price.value,\n        discount: discount.value,\n        description: description.value,\n      };\n      await addProduct(product);\n      notify(\"Producto agregado correctamente\");\n      cleanData();\n    } catch (error) {\n      notify(\"Hubo un error!\", false);\n    }\n  };\n\n  const renderOptions = (options) => {\n    return options.map((option) => <option value={option}>{option}</option>);\n  };\n\n  const allFieldsAreValid = () => {\n    return (\n      name.isValid &&\n      unit.isValid &&\n      measure.isValid &&\n      minimumStock.isValid &&\n      initialStock.isValid &&\n      price.isValid &&\n      discount.isValid &&\n      description.isValid\n    );\n  };\n\n  return (\n    <PageContainer title=\"Producto\">\n      <Card className=\"mb-4 p-0 fix-card-style\">\n        <CardBody className=\"p-3\">\n          <Row>\n            <TextField\n              title=\"Nombre\"\n              value={name.value}\n              onChange={setName}\n              lgSize=\"8\"\n            />\n            <NumericField\n              title=\"Código\"\n              value={code.value}\n              onChange={setCode}\n            />\n            <Col lg=\"8\">\n              <label>Medida</label>\n              <Row className=\"d-flex flex-direction-row\">\n                <NumericField value={unit.value} onChange={setUnit} />\n                <Col lg=\"9\">\n                  <FormSelect\n                    placeholder=\"Medida\"\n                    onChange={(event) => {\n                      setMeasure({value: event.target.value, isValid: true});\n                    }}\n                  >\n                    {renderOptions(options)}\n                  </FormSelect>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row className=\"createProductFieldRow\">\n            <NumericField\n              title=\"Precio\"\n              value={price.value}\n              onChange={setPrice}\n            />\n            <NumericField\n              title=\"Descuento %\"\n              value={discount.value}\n              onChange={setDiscount}\n            />\n            <NumericField\n              title=\"Stock mínimo\"\n              value={minimumStock.value}\n              onChange={setMinimumStock}\n            />\n            <NumericField\n              title=\"Stock inicial\"\n              value={initialStock.value}\n              onChange={setInitialStock}\n            />\n          </Row>\n          <Row className=\"createProductFieldRow\">\n            <Col lg=\"12\">\n              <label>Descripción</label>\n              <FormTextarea\n                onChange={(event) => {\n                  setDescription({value: event.target.value, isValid: true});\n                }}\n              />\n            </Col>\n          </Row>\n          <Row className=\"createProductActions\">\n            <Col className=\"d-flex justify-end\">\n              <Button\n                disabled={!allFieldsAreValid() || processingRequest}\n                onClick={handleCreateProduct}\n                theme={\"primary\"}\n              >\n                Crear\n              </Button>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </PageContainer>\n  );\n});\n\nexport default CreateProduct;\n","// @ts-ignore\nimport {action, makeObservable, observable} from \"mobx\";\n\nclass StockState {\n  constructor() {\n    makeObservable(this, {\n      currentStock: observable,\n      defaultStockOrder: observable,\n      setCurrentStock: action,\n    });\n  };\n  defaultStockOrder = {\n    id: null,\n    price: null,\n    quantity: null,\n    discount: null,\n    name: \"Seleccione un producto\",\n    current_stock: 0,\n    measure: 0,\n    minimum_stock: 0,\n  };\n  currentStock = [];\n  setCurrentStock = (data) => {\n    // eslint-disable-line no-invalid-this\n    this.currentStock = data;\n  };\n}\n\nexport default new StockState();\n","import {RequestMovement} from \"../components/stocks/MovementTypes\";\nimport AppState from \"../state/AppState\";\n\nconst {doGet, doPost} = require(\"./GenericConnector\");\n\nexport const getStockList = () => {\n  return doGet(`api/v1/users/${AppState.accountId}/stocks`);\n};\n\nexport const addStock = (data: RequestMovement) => {\n  return doPost(`api/v1/users/${AppState.accountId}/stocks`, data);\n};\n","import React, {useEffect} from \"react\";\nimport {observer} from \"mobx-react\";\nimport Table from \"../common/Table/Table\";\nimport stockState from \"../../state/StockState\";\nimport PageContainer from \"../common/PageContainer/PageContainer\";\nimport {getStockList} from \"../../connectors/StocksConnector\";\n\nconst Stock = observer((props) => {\n  useEffect(() => {\n    const getStockListWrapper = async () => {\n      const data = await getStockList();\n      stockState.setCurrentStock(data);\n    };\n    getStockListWrapper();\n  }, []);\n\n  const formatStock = () => {\n    return stockState.currentStock.map((stock) => [\n      stock.name,\n      stock.current_stock,\n      `${stock.unit} ${stock.measure}`,\n      stock.minimum_stock,\n    ]);\n  };\n\n  return (\n    <PageContainer title=\"Stock\">\n      <Table\n        columns={[\n          \"Producto\",\n          \"Stock Actual\",\n          \"Medida\",\n          \"Stock Minimo\",\n        ]}\n        rows={formatStock()}\n      />\n    </PageContainer>\n  );\n});\n\nexport default Stock;\n","import React from \"react\";\nimport {\n  Col,\n  Button,\n} from \"shards-react\";\nimport {observer} from \"mobx-react\";\nimport NumericField from \"../../common/NumericField/NumericField\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport \"./StockComponent.css\";\nimport {faTrashAlt} from \"@fortawesome/free-regular-svg-icons\";\nimport TextField from \"../../common/TextField/TextField\";\n\nconst StockComponent = observer(({\n  selectedOrder,\n  allOrders,\n  orderIndex,\n  setSelectedOrders,\n  handleDeletion,\n}) => {\n  const setIsValid = (orders) => {\n    orders[orderIndex].isValid = orders[orderIndex].quantity.isValid &&\n      orders[orderIndex].discount.isValid &&\n      orders[orderIndex].product.isValid &&\n      orders[orderIndex].price.isValid;\n  };\n\n  const handleQuantityChange = (newQuantity) => {\n    const newOrders = [...allOrders];\n    newOrders[orderIndex].quantity = newQuantity;\n    setIsValid(newOrders);\n    setSelectedOrders(newOrders);\n  };\n\n  const handlePriceChange = (newPrice) => {\n    const newOrders = [...allOrders];\n    newOrders[orderIndex].price = newPrice;\n    setIsValid(newOrders);\n    setSelectedOrders(newOrders);\n  };\n\n  const handleDiscountChange = (newDiscount) => {\n    const newOrders = [...allOrders];\n    newOrders[orderIndex].discount = newDiscount;\n    setIsValid(newOrders);\n    setSelectedOrders(newOrders);\n  };\n\n  return (\n    <div className={\"d-flex flex-direction-row align-items-end mt-2\"}>\n      {console.log(selectedOrder)}\n      <TextField\n        title={\"\"}\n        placeholder={selectedOrder.name.value}\n        value={selectedOrder.name.value}\n        onChange={()=>{}}\n        lgSize=\"5\"\n      />\n\n      <NumericField\n        title={\"\"}\n        placeholder={\"\"}\n        value={selectedOrder.quantity.value}\n        onChange={handleQuantityChange}\n        lgSize=\"2\"\n      />\n\n      <NumericField\n        title={\"\"}\n        placeholder={selectedOrder.price.value}\n        value={selectedOrder.price.value}\n        onChange={handlePriceChange}\n        lgSize=\"2\"\n      />\n\n      <NumericField\n        title={\"\"}\n        placeholder={selectedOrder.discount.value}\n        value={selectedOrder.discount.value}\n        onChange={handleDiscountChange}\n        lgSize=\"2\"\n        classes=\"pr-0\"\n      />\n\n      <Col lg=\"1\">\n        <Button\n          className=\"primary-white-background-color trash-icon-style border-0 pl-1 pr-1 ml-3\"\n          theme=\"danger\"\n          onClick={ () => {\n            handleDeletion(orderIndex);\n          }}\n          small >\n          <FontAwesomeIcon icon={faTrashAlt}/>\n        </Button>\n      </Col>\n    </div>\n  );\n});\n\nexport default StockComponent;\n","export const buildStock = (stock = {\n  id: \"\",\n  price: 0,\n  quantity: \"\",\n  name: \"\",\n  discount: 0,\n},\nisValid = false) => {\n  return {\n    product: {value: stock.id, isValid: true},\n    price: {value: stock.price, isValid: true},\n    quantity: {value: stock.quantity, isValid: false},\n    name: {value: stock.name, isValid: true},\n    discount: {value: stock.discount, isValid: true},\n    isValid: isValid,\n  };\n};\n\nexport const mapToOrder = (order) => {\n  return {\n    productId: order.product.value,\n    price: order.price.value,\n    quantity: parseInt(order.quantity.value),\n    discount: order.discount.value,\n  };\n};\n","import React from \"react\";\nimport {\n  Col,\n} from \"shards-react\";\nimport {observer} from \"mobx-react\";\n\nconst StockTitleComponent = observer(({\n}) => {\n  return (\n    <>\n      <Col lg=\"5\"><label className=\"m-0\">Producto</label></Col>\n      <Col lg=\"2\"><label className=\"m-0\">Cantidad</label></Col>\n      <Col lg=\"2\"><label className=\"m-0\">Precio</label></Col>\n      <Col lg=\"3\"><label className=\"m-0\">Descuento %</label></Col>\n    </>\n  );\n});\n\nexport default StockTitleComponent;\n","import React, {useRef, useState} from \"react\";\nimport {\n  Col,\n  FormSelect,\n  FormCheckbox,\n  Button,\n} from \"shards-react\";\nimport {observer} from \"mobx-react\";\nimport StockState from \"../../../../state/StockState\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./StockSelectProductComponent.css\";\n\nconst StockSelectProductComponent = observer(({\n  addNewMovement,\n  buildStock,\n  addManyMovements,\n}) => {\n  const [stockIndex, setStockIndex] = useState(null);\n  const [singleSelect, setSingleSelect] = useState(true);\n  const hiddenFileInput = useRef<HTMLInputElement>();\n\n\n  const renderOptions = () => {\n    return [\n      <option value={\"\"}>{StockState.defaultStockOrder.name}</option>,\n      ...StockState.currentStock.map((stock, index) =>\n        <option value={index}>{stock.name}</option>),\n    ];\n  };\n\n  const handleProductChange = () => {\n    if (stockIndex) {\n      addNewMovement(buildStock(StockState.currentStock[stockIndex]));\n    }\n  };\n\n  return (\n    <div className=\"d-flex align-items-center w-100\">\n      {singleSelect && (\n        <>\n          <Col lg=\"4\">\n            <FormSelect\n              placeholder=\"Medida\"\n              onChange={(event) => {\n                setStockIndex(event.target.value);\n              }}>\n              {renderOptions()}\n            </FormSelect>\n          </Col>\n          <Col className=\"p-0\" lg=\"1\">\n            <Button\n              className=\"d-flex justify-center primary-white-background-color\n              check-icon-style border-0 w-100 h-100\"\n              theme=\"success\"\n              onClick={ () => {\n                handleProductChange();\n              }}\n              small >\n              <FontAwesomeIcon icon={faCheck}/>\n            </Button>\n          </Col>\n        </>\n      )}\n\n      {!singleSelect && (\n        <Col className=\"p-0\" lg=\"2\">\n          <input\n            type=\"file\"\n            className=\"display-none\"\n            ref={hiddenFileInput}\n            onChange={(e) => addManyMovements(e)}\n          />\n          <Button onClick={\n            ()=> {\n              hiddenFileInput.current.click();\n            }\n          }>\n            chota\n          </Button>\n        </Col>\n      )}\n      <Col className=\"p-0\" lg=\"4\">\n        <FormCheckbox\n          className=\"ml-2\"\n          toggle\n          checked={!singleSelect}\n          onChange={\n            ()=> {\n              setSingleSelect(!singleSelect);\n            }\n          }>\n          Cargar desde Excel\n        </FormCheckbox>\n      </Col>\n    </div>\n  );\n});\n\nexport default StockSelectProductComponent;\n","import React, {useState} from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Row,\n} from \"shards-react\";\nimport {observer} from \"mobx-react\";\nimport {RequestMovement} from \"../MovementTypes\";\nimport StockComponent from \"./StockComponent\";\nimport {buildStock, mapToOrder} from \"../../../utils/StockTransformer\";\nimport {addStock} from \"../../../connectors/StocksConnector\";\nimport {TOAST_DURATION} from \"../../../utils/constants\";\nimport {toast} from \"react-toastify\";\nimport readXlsxFile from \"read-excel-file\";\nimport ProductsState from \"../../../state/ProductsState\";\nimport StockTitleComponent from \"./stocktitle/StockTitleComponent\";\nimport StockSelectProductComponent from \"./stockselectproduct/StockSelectProductComponent\";\n\nconst moment = require(\"moment\");\n\nconst ModifyStock = observer(({movementType, btnType, btnName, ...props}) => {\n  const [movement, setMovement] = useState([]);\n  const [processingRequest, setProcessingRequest] = useState(false);\n\n  const allFieldsAreValid = () => {\n    return movement.reduce(\n      (previousValue, order) => previousValue && order.isValid, true);\n  };\n\n  const notify = (message, success = true) => {\n    if (success) {\n      toast.success(message);\n      setProcessingRequest(success);\n    } else {\n      toast.error(message);\n    }\n  };\n\n  const cleanData = () => {\n    setTimeout(() => {\n      setProcessingRequest(false);\n      setMovement([]);\n    }, TOAST_DURATION);\n  };\n\n  const addNewMovement = (newMovement) => {\n    setMovement([...movement, newMovement]);\n  };\n\n  const handleAddStock = async () => {\n    try {\n      setProcessingRequest(true);\n      const result: RequestMovement = {\n        orders: movement.map(mapToOrder),\n        date: moment.now(),\n        description: \"\",\n        type: movementType,\n      };\n      await addStock(result);\n      notify(\"Orden realizada correctamente.\");\n      cleanData();\n    } catch (error) {\n      notify(\"Hubo un error!\", false);\n    }\n  };\n\n  const handleDeleteOrder = (index) => {\n    const newMovement = [...movement];\n    if (newMovement.length > 1) {\n      newMovement.splice(index, 1);\n    }\n    setMovement(newMovement);\n  };\n\n  const handleOnChange = (e) => {\n    readXlsxFile(e.target.files[0]).then((rows) => {\n      const newMovement = [];\n      console.log(rows);\n      rows.forEach((row) => {\n        if (row[0] && ProductsState.productsIds.includes(row[0].toString())) {\n          const product = ProductsState.getProductById(row[0].toString());\n          newMovement.push(buildStock({\n            id: product.id,\n            discount: product.discount,\n            price: product.price,\n            quantity: row[1].toString(),\n            name: product.name,\n          }));\n        }\n      });\n      setMovement(newMovement);\n    });\n  };\n\n  return (\n    <Card className=\"mb-4 p-0 fix-card-style\">\n      <CardBody className=\"d-flex flex-direction-column p-3\">\n        <Row className=\"ml-0 mt-1 mb-1 d-flex flex-direction-row\">\n          <StockSelectProductComponent\n            buildStock={buildStock}\n            addNewMovement={addNewMovement}\n            addManyMovements={handleOnChange}\n          />\n        </Row>\n        <Row className=\"mt-3 ml-0 mr-1 mb-0 d-flex flex-direction-row\">\n          <StockTitleComponent />\n        </Row>\n        <Row className=\"m-1 d-flex flex-direction-row\">\n          {movement.map((mov, index) =>\n            <StockComponent\n              key={index}\n              selectedOrder={mov}\n              orderIndex={index}\n              allOrders={movement}\n              setSelectedOrders={setMovement}\n              handleDeletion={handleDeleteOrder}/>,\n          )}\n        </Row>\n        <Row className=\"d-flex justify-end\">\n          <Col className=\"d-flex justify-end\" lg=\"3\">\n            <Button\n              className=\"mt-2\"\n              disabled={!allFieldsAreValid() || processingRequest}\n              onClick={handleAddStock}\n              theme={btnType}>\n              {btnName}\n            </Button>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n});\n\nexport default ModifyStock;\n","import React from \"react\";\nimport {observer} from \"mobx-react\";\nimport ModifyStock from \"../modifystock/ModifyStock\";\nimport PageContainer from \"../../common/PageContainer/PageContainer\";\n\nconst AddStock = observer((props) => {\n  return (\n    <PageContainer title=\"Stock\">\n      <ModifyStock\n        btnType=\"success\"\n        btnName=\"Ingresar\"\n        movementType=\"in\"\n        title=\"Stock\"/>\n    </PageContainer>\n  );\n});\n\nexport default AddStock;\n","import React from \"react\";\nimport {observer} from \"mobx-react\";\nimport ModifyStock from \"../modifystock/ModifyStock\";\nimport PageContainer from \"../../common/PageContainer/PageContainer\";\n\nconst DeleteStock = observer((props) => {\n  return (\n    <PageContainer title=\"Stock\">\n      <ModifyStock\n        btnType=\"danger\"\n        btnName=\"Retirar\"\n        movementType=\"out\"\n        title=\"Eliminar Stock\"/>\n    </PageContainer>\n  );\n});\n\nexport default DeleteStock;\n","// @ts-ignore\nimport {action, makeObservable, observable} from \"mobx\";\nimport Products from \"../components/products/Products\";\nimport CreateProduct from \"../components/products/CreateProduct/CreateProduct\";\nimport Stock from \"../components/stocks/Stock\";\nimport AddStock from \"../components/stocks/addstock/AddStock\";\nimport DeleteStock from \"../components/stocks/deletestock/DeleteStock\";\n\nclass AppState {\n  constructor() {\n    makeObservable(this, {\n      navItem: observable,\n      accountId: observable,\n      setAccountId: action,\n    });\n  }\n  navItem = [\n    {\n      id: 0,\n      itemName: \"Producto\",\n      subItems: [\n        {\n          id: 0,\n          parentId: 0,\n          itemName: \"Ver Producto\",\n          componentToRender: <Products />,\n        },\n        {\n          id: 1,\n          parentId: 0,\n          itemName: \"Agregar Producto\",\n          componentToRender: <CreateProduct />,\n        },\n      ],\n    },\n    {\n      id: 1,\n      itemName: \"Stock\",\n      subItems: [\n        {\n          id: 0,\n          parentId: 1,\n          itemName: \"Ver Stock\",\n          componentToRender: <Stock />,\n        },\n        {\n          id: 1,\n          parentId: 1,\n          itemName: \"Ingresar Stock\",\n          componentToRender: <AddStock />,\n        },\n        {\n          id: 2,\n          parentId: 1,\n          itemName: \"Retirar Stock\",\n          componentToRender: <DeleteStock />,\n        },\n      ],\n    },\n  ];\n  accountId = localStorage.getItem(\"accountId\");\n  setAccountId = (accountId: string) => {\n    this.accountId = accountId;\n  };\n}\n\n// Singleton Pattern\nexport default Object.freeze(new AppState());\n","import React from \"react\";\nimport {observer} from \"mobx-react\";\nimport {Nav} from \"shards-react\";\nimport SideBarMainItem from \"./mainitem/SideBarMainItem\";\nimport AppState from \"../../state/AppState\";\nimport \"./SideBar.css\";\n\nconst SideBar = observer(({updateSelectedItemId, selectedItemIds}) => {\n  return (\n    <Nav className=\"nav--no flex-column\">\n      {AppState.navItem.map((item, idx) => (\n        <SideBarMainItem\n          key={idx}\n          navItem={item}\n          clickedIds={selectedItemIds}\n          setClicked={updateSelectedItemId}\n        />\n      ))}\n    </Nav>\n  );\n});\n\nexport default SideBar;\n","import React from \"react\";\nimport {Navbar, NavbarBrand} from \"shards-react\";\nimport \"./SideBarMainNav.css\";\nimport {observer} from \"mobx-react\";\n\nconst SideItemHeader = observer((props) => {\n  return (\n    <>\n      <Navbar className=\"d-flex justify-center\">\n        <NavbarBrand className=\"main-nav-title p-0\">Gardel</NavbarBrand>\n      </Navbar>\n    </>\n  );\n});\nexport default SideItemHeader;\n","import React, {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faBell, faUser} from \"@fortawesome/free-regular-svg-icons\";\nimport {Button, Tooltip, Col} from \"shards-react\";\nimport HeaderButton from \"./buttons/HeaderButton\";\nimport \"./Header.css\";\n\nconst Header = ({...props}) => {\n  // Initialize tooltip state, and get it's toggle\n  const [openTooltipState, setOpenTooltipState] = useState(false);\n  const toggleTooltip = () => {\n    setOpenTooltipState(!openTooltipState);\n  };\n\n  return (\n    <div className=\"fixed-height\">\n      {/* \"primary-white-background-color\" */}\n      {/* <div className=\"d-flex flex-row\">\n            <HeaderButton icon={faUser} onClickHandler={toggleTooltip} />\n            <Tooltip\n              placement=\"bottom\"\n              open={openTooltipState}\n              target=\"#TooltipBottom\"\n              trigger=\"click\" />\n          </div> */}\n      {/* <HeaderButton icon={faBell}/>*/}\n    </div>\n  );\n};\nexport default Header;\n","import React, {useState} from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardImg,\n  CardBody,\n  Row,\n  Col,\n} from \"shards-react\";\nimport TextField from \"./../common/TextField/TextField\";\n\nconst Login = (props) => {\n  const [accountId, setAccountId] = useState({value: \"\", isValid: false});\n\n  return (\n    <div\n      className=\"d-flex justify-center align-center\"\n      style={{height: \"100%\", backgroundColor: \"#21252e\"}}\n    >\n      <Card style={{margin: \"10px\", height: \"210px\", width: \"600px\"}}>\n        <CardHeader className=\"d-flex justify-center\">\n          Ingresá a Gardel\n        </CardHeader>\n        {/* <CardImg src=\"https://place-hold.it/600x200\" /> TODO: add logo*/}\n        <CardBody className=\"p-3\">\n          <TextField\n            title=\"Identificador de Cuenta\"\n            value={accountId.value}\n            onChange={setAccountId}\n            lgSize=\"8\"\n          />\n          <Row className=\"d-flex justify-end\">\n            <Col className=\"d-flex justify-end\" lg=\"3\">\n              <Button\n                disabled={!accountId.isValid}\n                onClick={() => props.onLoginSuccessful(accountId.value)}\n                theme={\"primary\"}\n              >\n                Ingresar\n              </Button>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default Login;\n","import \"./App.css\";\nimport React, {useEffect, useState} from \"react\";\nimport {observer} from \"mobx-react\";\nimport {Col, Row} from \"shards-react\";\nimport SideBar from \"./components/sidebar/SideBar\";\nimport SideItemHeader from \"./components/sidebar/mainnav/SideItemHeader\";\nimport AppState from \"./state/AppState\";\nimport Header from \"./components/header/Header\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {ToastContainer} from \"react-toastify\";\nimport {TOAST_DURATION} from \"./utils/constants\";\nimport Login from \"./components/login/Login\";\nrequire(\"dotenv\").config();\n\nconst App = observer((props) => {\n  const accountId = AppState.accountId;\n  const [selectedItemIds, setSelectedItemIds] = useState({\n    parentId: 0,\n    childId: 0,\n  });\n\n  const getComponentToRender = () => {\n    const mainItem = AppState.navItem[selectedItemIds.parentId];\n    return mainItem.subItems[selectedItemIds.childId].componentToRender;\n  };\n\n  const handleLoginSuccessful = (accountId) => {\n    AppState.setAccountId(accountId);\n    localStorage.setItem(\"accountId\", accountId);\n  };\n\n  if (!accountId) {\n    return <Login onLoginSuccessful={handleLoginSuccessful} />;\n  }\n\n  return (\n    <div className=\"w-100 h-100\">\n      <Row className=\"d-flex flex-direction-row h-100\">\n        <Col\n          className=\"primary-palette-background-color p-0\"\n          lg={{size: 3}}\n          md={{size: 4}}\n        >\n          <SideItemHeader />\n          <SideBar\n            updateSelectedItemId={setSelectedItemIds}\n            selectedItemIds={selectedItemIds}\n          />\n        </Col>\n        <Col\n          className=\"m-0 secondary-light-grey-background-color\"\n          lg={{size: 9}}\n          md={{size: 8}}\n        >\n          <Header />\n          {getComponentToRender()}\n        </Col>\n      </Row>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={TOAST_DURATION}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n});\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","module.exports = {\n  BACKEND_URL: \"https://gardel-erp-service.herokuapp.com/\",\n  TOAST_DURATION: 3000,\n};\n","const axios = require(\"axios\");\nconst {BACKEND_URL} = require(\"../utils/constants\");\n\nexport const doGet = async (path) => {\n  const response = await axios.get(`${BACKEND_URL}${path}`);\n  if (response.request.status !== 200) {\n    console.log(response);\n  }\n  return response.data;\n};\n\nexport const doPost = async (path, data) => {\n  const response = await axios.post(`${BACKEND_URL}${path}`, data);\n  if (response.request.status !== 200) {\n    console.log(response);\n  }\n  return response.data;\n};\n"],"sourceRoot":""}